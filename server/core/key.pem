from human_in_loop.corpus import Corpus
from human_in_loop.model import Model

model = Model(model_path="models/model.tar.gz")
corpus = Corpus(path='server_annotation_bin.conll')


server_commands = {
    'make_prediction':
    lambda x: model.predict(x['text']),
    'save_annotation':
    lambda x: corpus.write_annotation(x['annotation']),
    'could_you_train?':
    lambda x: model.train()
}

# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.


from twisted.internet import reactor, protocol


class Echo(protocol.Protocol):
    """This is just about the simplest possible protocol"""

    def dataReceived(self, data):
        "As soon as any data is received, write it back."
        self.transport.write(data)


def main():
    """This runs the protocol on port 8000"""
    factory = protocol.ServerFactory()
    factory.protocol = Echo
    reactor.listenTCP(8000,factory)
    reactor.run()

# this only runs if the module was *not* imported
if __name__ == '__main__':
    main()